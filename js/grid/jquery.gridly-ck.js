// Generated by CoffeeScript 1.6.3
/*
jQuery Gridly
Copyright 2013 Kevin Sylvestre
1.2.2
*/(function() {
    "use strict";
    var e, t, n, r, i = function(e, t) {
        return function() {
            return e.apply(t, arguments);
        };
    }, s = [].slice;
    e = jQuery;
    t = function() {
        function e() {}
        e.transitions = {
            webkitTransition: "webkitTransitionEnd",
            mozTransition: "mozTransitionEnd",
            oTransition: "oTransitionEnd",
            transition: "transitionend"
        };
        e.transition = function(e) {
            var t, n, r, i;
            t = e[0];
            i = this.transitions;
            for (r in i) {
                n = i[r];
                if (t.style[r] != null) return n;
            }
        };
        e.execute = function(e, t) {
            var n;
            n = this.transition(e);
            return n != null ? e.one(n, t) : t();
        };
        return e;
    }();
    n = function() {
        function t(e, t, n) {
            this.click = i(this.click, this);
            this.moved = i(this.moved, this);
            this.ended = i(this.ended, this);
            this.began = i(this.began, this);
            this.coordinate = i(this.coordinate, this);
            this.off = i(this.off, this);
            this.on = i(this.on, this);
            this.toggle = i(this.toggle, this);
            this.bind = i(this.bind, this);
            this.$container = e;
            this.selector = t;
            this.callbacks = n;
            this.toggle();
        }
        t.prototype.bind = function(t) {
            t == null && (t = "on");
            e(document)[t]("mousemove touchmove", this.moved);
            return e(document)[t]("mouseup touchend touchcancel", this.ended);
        };
        t.prototype.toggle = function(e) {
            e == null && (e = "on");
            this.$container[e]("mousedown touchstart", this.selector, this.began);
            return this.$container[e]("click", this.selector, this.click);
        };
        t.prototype.on = function() {
            return this.toggle("on");
        };
        t.prototype.off = function() {
            return this.toggle("off");
        };
        t.prototype.coordinate = function(e) {
            switch (e.type) {
              case "touchstart":
              case "touchmove":
              case "touchend":
              case "touchcancel":
                return e.originalEvent.touches[0];
              default:
                return e;
            }
        };
        t.prototype.began = function(t) {
            var n;
            if (this.$target) return;
            t.preventDefault();
            t.stopPropagation();
            this.bind("on");
            this.$target = e(t.target).closest(this.$container.find(this.selector));
            this.$target.addClass("dragging");
            this.origin = {
                x: this.coordinate(t).pageX - this.$target.position().left,
                y: this.coordinate(t).pageY - this.$target.position().top
            };
            return (n = this.callbacks) != null ? typeof n.began == "function" ? n.began(t) : void 0 : void 0;
        };
        t.prototype.ended = function(e) {
            var t;
            if (this.$target == null) return;
            e.preventDefault();
            e.stopPropagation();
            this.bind("off");
            this.$target.removeClass("dragging");
            delete this.$target;
            delete this.origin;
            return (t = this.callbacks) != null ? typeof t.ended == "function" ? t.ended(e) : void 0 : void 0;
        };
        t.prototype.moved = function(e) {
            var t;
            if (this.$target == null) return;
            e.preventDefault();
            e.stopPropagation();
            this.$target.css({
                left: this.coordinate(e).pageX - this.origin.x,
                top: this.coordinate(e).pageY - this.origin.y
            });
            this.dragged = this.$target;
            return (t = this.callbacks) != null ? typeof t.moved == "function" ? t.moved(e) : void 0 : void 0;
        };
        t.prototype.click = function(e) {
            if (!this.dragged) return;
            e.preventDefault();
            e.stopPropagation();
            return delete this.dragged;
        };
        return t;
    }();
    r = function() {
        function t(n, r) {
            r == null && (r = {});
            this.optimize = i(this.optimize, this);
            this.layout = i(this.layout, this);
            this.structure = i(this.structure, this);
            this.position = i(this.position, this);
            this.size = i(this.size, this);
            this.draggingMoved = i(this.draggingMoved, this);
            this.draggingEnded = i(this.draggingEnded, this);
            this.draggingBegan = i(this.draggingBegan, this);
            this.$sorted = i(this.$sorted, this);
            this.draggable = i(this.draggable, this);
            this.compare = i(this.compare, this);
            this.$ = i(this.$, this);
            this.reordinalize = i(this.reordinalize, this);
            this.ordinalize = i(this.ordinalize, this);
            this.$el = n;
            this.settings = e.extend({}, t.settings, r);
            this.ordinalize(this.$("> *"));
            this.settings.draggable !== !1 && this.draggable();
            return this;
        }
        t.settings = {
            base: 60,
            gutter: 20,
            columns: 12,
            draggable: {
                zIndex: 800
            }
        };
        t.gridly = function(e, n) {
            var r;
            n == null && (n = {});
            r = e.data("_gridly");
            if (!r) {
                r = new t(e, n);
                e.data("_gridly", r);
            }
            return r;
        };
        t.prototype.ordinalize = function(t) {
            var n, r, i, s, o;
            o = [];
            for (r = i = 0, s = t.length; 0 <= s ? i <= s : i >= s; r = 0 <= s ? ++i : --i) {
                n = e(t[r]);
                o.push(n.data("position", r));
            }
            return o;
        };
        t.prototype.reordinalize = function(e, t) {
            return e.data("position", t);
        };
        t.prototype.$ = function(e) {
            return this.$el.find(e);
        };
        t.prototype.compare = function(e, t) {
            return e.y > t.y + t.h ? 1 : t.y > e.y + e.h ? -1 : e.x + e.w / 2 > t.x + t.w / 2 ? 1 : t.x + t.w / 2 > e.x + e.w / 2 ? -1 : 0;
        };
        t.prototype.draggable = function(e) {
            this._draggable == null && (this._draggable = new n(this.$el, "> *", {
                began: this.draggingBegan,
                ended: this.draggingEnded,
                moved: this.draggingMoved
            }));
            if (e != null) return this._draggable[e]();
        };
        t.prototype.$sorted = function(t) {
            return (t || this.$("> *")).sort(function(t, n) {
                var r, i, s, o, u, a;
                r = e(t);
                i = e(n);
                s = r.data("position");
                u = i.data("position");
                o = parseInt(s);
                a = parseInt(u);
                return s != null && u == null ? -1 : u != null && s == null ? 1 : !s && !u && r.index() < i.index() ? -1 : !u && !s && i.index() < r.index() ? 1 : o < a ? -1 : a < o ? 1 : 0;
            });
        };
        t.prototype.draggingBegan = function(e) {
            var t, n, r;
            t = this.$sorted();
            this.ordinalize(t);
            setTimeout(this.layout, 0);
            return (n = this.settings) != null ? (r = n.callbacks) != null ? typeof r.reordering == "function" ? r.reordering(t) : void 0 : void 0 : void 0;
        };
        t.prototype.draggingEnded = function(e) {
            var t, n, r;
            t = this.$sorted();
            this.ordinalize(t);
            setTimeout(this.layout, 0);
            return (n = this.settings) != null ? (r = n.callbacks) != null ? typeof r.reordered == "function" ? r.reordered(t) : void 0 : void 0 : void 0;
        };
        t.prototype.draggingMoved = function(t) {
            var n, r, i, s, o, u, a, f, l, c, h, p, d;
            n = e(t.target).closest(this.$("> *"));
            r = this.$sorted();
            a = this.structure(r).positions;
            u = o = n.data("position");
            h = a.filter(function(e) {
                return e.$element.is(n);
            });
            for (f = 0, c = h.length; f < c; f++) {
                i = h[f];
                i.x = n.position().left;
                i.y = n.position().top;
                i.w = n.data("width") || n.width();
                i.h = n.data("height") || n.height();
            }
            a.sort(this.compare);
            r = a.map(function(e) {
                return e.$element;
            });
            r = (((p = this.settings.callbacks) != null ? p.optimize : void 0) || this.optimize)(r);
            for (s = l = 0, d = r.length; 0 <= d ? l < d : l > d; s = 0 <= d ? ++l : --l) this.reordinalize(e(r[s]), s);
            return this.layout();
        };
        t.prototype.size = function(e) {
            return ((e.data("width") || e.width()) + this.settings.gutter) / (this.settings.base + this.settings.gutter);
        };
        t.prototype.position = function(e, t) {
            var n, r, i, s, o, u, a, f, l;
            o = this.size(e);
            r = Infinity;
            n = 0;
            for (i = u = 0, f = t.length - o; 0 <= f ? u < f : u > f; i = 0 <= f ? ++u : --u) {
                s = Math.max.apply(Math, t.slice(i, i + o));
                if (s < r) {
                    r = s;
                    n = i;
                }
            }
            for (i = a = n, l = n + o; n <= l ? a < l : a > l; i = n <= l ? ++a : --a) t[i] = r + (e.data("height") || e.height()) + this.settings.gutter;
            return {
                x: n * (this.settings.base + this.settings.gutter),
                y: r
            };
        };
        t.prototype.structure = function(t) {
            var n, r, i, s, o, u, a, f;
            t == null && (t = this.$sorted());
            u = [];
            r = function() {
                var e, t, n;
                n = [];
                for (i = e = 0, t = this.settings.columns; 0 <= t ? e <= t : e >= t; i = 0 <= t ? ++e : --e) n.push(0);
                return n;
            }.call(this);
            for (s = a = 0, f = t.length; 0 <= f ? a < f : a > f; s = 0 <= f ? ++a : --a) {
                n = e(t[s]);
                o = this.position(n, r);
                u.push({
                    x: o.x,
                    y: o.y,
                    w: n.data("width") || n.width(),
                    h: n.data("height") || n.height(),
                    $element: n
                });
            }
            return {
                height: Math.max.apply(Math, r),
                positions: u
            };
        };
        t.prototype.layout = function() {
            var t, n, r, i, s, o, u, a;
            n = (((u = this.settings.callbacks) != null ? u.optimize : void 0) || this.optimize)(this.$sorted());
            s = this.structure(n);
            for (r = o = 0, a = n.length; 0 <= a ? o < a : o > a; r = 0 <= a ? ++o : --o) {
                t = e(n[r]);
                i = s.positions[r];
                if (t.is(".dragging")) continue;
                t.css({
                    position: "absolute",
                    left: i.x,
                    top: i.y
                });
            }
            return this.$el.css({
                height: s.height
            });
        };
        t.prototype.optimize = function(t) {
            var n, r, i, s, o;
            i = [];
            n = 0;
            while (t.length > 0) {
                n === this.settings.columns && (n = 0);
                r = 0;
                for (r = s = 0, o = t.length; 0 <= o ? s < o : s > o; r = 0 <= o ? ++s : --s) if (n + this.size(e(t[r])) <= this.settings.columns) break;
                if (r === t.length) {
                    r = 0;
                    n = 0;
                }
                n += this.size(e(t[r]));
                i.push(t.splice(r, 1)[0]);
            }
            return i;
        };
        return t;
    }();
    e.fn.extend({
        gridly: function() {
            var t, n;
            t = arguments[0], n = 2 <= arguments.length ? s.call(arguments, 1) : [];
            t == null && (t = {});
            return this.each(function() {
                var i, s, o;
                i = e(this);
                o = e.extend({}, e.fn.gridly.defaults, typeof t == "object" && t);
                s = typeof t == "string" ? t : t.action;
                s == null && (s = "layout");
                return r.gridly(i, o)[s](n);
            });
        }
    });
}).call(this);